<jboss-deployment-structure>
  <!-- Make sub deployments isolated by default, so they cannot see each others classes without a Class-Path entry -->
  <ear-subdeployments-isolated>false</ear-subdeployments-isolated>
  <!-- This corresponds to the top level deployment. For a war this is the war's module, for an ear -->
  <!-- This is the top level ear module, which contains all the classes in the EAR's lib folder     -->
  <deployment>
    <!-- Exclusions allow you to prevent the server from automatically adding some dependencies     
    <exclusions>
        <module name="org.javassist" />
    </exclusions>
    -->
    <!-- This allows you to define additional dependencies, it is the same as using the Dependencies: manifest attribute 
    <dependencies>
      <module name="deployment.javassist.proxy" />
      <module name="deployment.myjavassist" />
    </dependencies>
    -->
    <!-- These add additional classes to the module. In this case it is the same as including the jar in the EAR's lib directory 
    <resources>
      <resource-root path="my-library.jar" />
    </resources>
    -->
    <dependencies>
      	<module name="org.apache.xerces" />
  	</dependencies>
  </deployment>
  <sub-deployment name="astroboa-engine.spring">
  	<dependencies>
      	<module name="org.apache.xerces" />
  	</dependencies>
  </sub-deployment>
  <!-- <sub-deployment name="astroboa-ejb3.jar">
  	<dependencies>
      	<module name="deployment.astroboa.ear.astroboa-engine.spring" />
  	</dependencies>
  </sub-deployment>
  <sub-deployment name="resource-api.war">
  	<dependencies>
      	<module name="org.apache.xerces" />
      	<module name="deployment.astroboa.ear.astroboa-engine.spring" />
  	</dependencies>
  </sub-deployment>
  <sub-deployment name="console.war">
  	<dependencies>
  		<module name="org.apache.xerces" />
      	<module name="deployment.astroboa.ear.astroboa-engine.spring" />
  	</dependencies>
  </sub-deployment> -->
</jboss-deployment-structure>