<?xml version="1.0" encoding="UTF-8"?>
<!-- 

Copyright (C) 2005-2011 BetaCONCEPT LP.

		  This file is part of Astroboa.
		 
		  Astroboa is free software: you can redistribute it and/or modify
		  it under the terms of the GNU Lesser General Public License as published by
		  the Free Software Foundation, either version 3 of the License, or
		  (at your option) any later version.
		 
		  Astroboa is distributed in the hope that it will be useful,
		  but WITHOUT ANY WARRANTY; without even the implied warranty of
		  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
		  GNU Lesser General Public License for more details.
		 
		  You should have received a copy of the GNU Lesser General Public License
		  along with Astroboa.  If not, see <http://www.gnu.org/licenses/>.
		 
Authors 
		  Gregory Chomatas (gchomatas@betaconcept.com)
		  Savvas Triantafyllou (striantafyllou@betaconcept.com)
		 		    
-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" 
          "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" 
	xmlns:rich="http://richfaces.org/rich"
	xmlns:a4j="http://richfaces.org/a4j"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:f="http://java.sun.com/jsf/core" 
	xmlns:h="http://java.sun.com/jsf/html" 
	xmlns:c="http://java.sun.com/jstl/core"
	xmlns:sf="http://www.betaconceptframework.org/facelets/cms/staticMethods">

	<body>
		<ui:composition>
			<ui:fragment rendered="#{! empty facesContext.maximumSeverity}">
				
				<script type="text/javascript">
				//<![CDATA[
					var messageHeader = '#{pageMessages.messageHeader}';
					var returnMessage = new Array();
					var messageClass;
					
					switch (#{facesContext.maximumSeverity.getOrdinal()}) {
			    	case 0:
			    		messageClass = 'info';
			    		messageHeader = ''
						break;
			    	case 1:
			    		messageClass = 'warn';
			    		messageHeader = "#{messages['application.messages.warn']}"
						break;
			    	case 2:
			    		messageClass = 'error';
			    		messageHeader = "#{messages['application.messages.error']}"
						break;
					default:
						messageClass = 'info';
						messageHeader = ''
						break;
					}
					
					if (messageHeader != '') {
						returnMessage.push(messageHeader);
					}
					
					returnMessage.push('#{sf:getApplicationMessagesInSeparateLines()}');
					
					bcmslib.jQuery(document).ready(function() {
						bcmslib.jQuery('body').showMessage({
							'thisMessage':		returnMessage,
							'className':		messageClass,
							'opacity':			85,
							'displayNavigation':	false,
							'autoClose':		false,
							'delayTime':		10000
	
						});
						bcmslib.jQuery("#showMessage").css({
							'z-index': 9999
						});
					});
				//]]>
				</script>
				
			</ui:fragment>
			
		</ui:composition>
	</body>
</html>
